// Generated by CoffeeScript 1.7.1
(function() {
  var Command, Engine, MoveAction, MoveCommand, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ = require('underscore');

  Command = require('./command');

  Engine = require('../engine/engine');

  MoveAction = require('../actions/move');

  module.exports = MoveCommand = (function(_super) {
    __extends(MoveCommand, _super);

    function MoveCommand() {
      this.toJSON = __bind(this.toJSON, this);
      this.execute = __bind(this.execute, this);
      return MoveCommand.__super__.constructor.apply(this, arguments);
    }

    MoveCommand.prototype._name = 'move';

    MoveCommand.prototype.execute = function() {
      this.move_action = new MoveAction({
        entity: this.entity,
        path: this.path
      });
      Engine.getSystem('action_queue').push(this.move_action);
      this.goal = this.path[this.path.length - 1];
      this.entity.hex_position.q = this.goal.q;
      this.entity.hex_position.r = this.goal.r;
      return console.log(this.entity);
    };

    MoveCommand.prototype.toJSON = function() {
      return {
        command: this._name,
        data: {
          entity: this.entity.id,
          path: this.path
        }
      };
    };

    return MoveCommand;

  })(Command);

}).call(this);
