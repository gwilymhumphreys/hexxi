// Generated by CoffeeScript 1.7.1
(function() {
  var Component, Relations,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Component = require('./component');

  module.exports = Relations = (function(_super) {
    __extends(Relations, _super);

    Relations.prototype._name = 'relations';

    function Relations() {
      this.addChild = __bind(this.addChild, this);
      Relations.__super__.constructor.apply(this, arguments);
      this.children = [];
    }

    Relations.prototype.setParent = function(entity) {
      this.parent = entity;
      this.emit('parent/changed', this.entity);
      return this.entity;
    };

    Relations.prototype.addChild = function(entity) {
      entity.relations.setParent(this);
      this.children.push(entity);
      this.emit('child/added', this.entity);
      return this.entity;
    };

    return Relations;

  })(Component);

}).call(this);
