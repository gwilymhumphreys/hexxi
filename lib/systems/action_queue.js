// Generated by CoffeeScript 1.7.1
(function() {
  var ActionQueue, System,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  System = require('./system');

  module.exports = ActionQueue = (function(_super) {
    __extends(ActionQueue, _super);

    ActionQueue.prototype._name = 'action_queue';

    function ActionQueue() {
      this.update = __bind(this.update, this);
      ActionQueue.__super__.constructor.apply(this, arguments);
      this.actions = [];
    }

    ActionQueue.prototype.unshift = function(action) {
      return this.actions.unshift(action);
    };

    ActionQueue.prototype.push = function(action) {
      return this.actions.push(action);
    };

    ActionQueue.prototype.pop = function(action) {
      return this.actions.pop(action);
    };

    ActionQueue.prototype.pause = function(action) {
      return this.actions.pause(action);
    };

    ActionQueue.prototype.update = function() {
      var _ref;
      if ((_ref = this.current_action) != null ? _ref.complete : void 0) {
        this.current_action = null;
      }
      if (!(this.current_action || this.actions.length)) {
        return;
      }
      if (this.current_action || (this.current_action = this.pop())) {
        return this.current_action.update();
      }
    };

    return ActionQueue;

  })(System);

}).call(this);
