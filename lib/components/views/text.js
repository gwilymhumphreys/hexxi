// Generated by CoffeeScript 1.7.1
(function() {
  var PIXI, TextView, View, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ = require('underscore');

  View = require('./view');

  PIXI = require('pixi');

  module.exports = TextView = (function(_super) {
    __extends(TextView, _super);

    TextView.prototype._name = 'text';

    function TextView(entity, options) {
      this.entity = entity;
      this.createDisplayObject = __bind(this.createDisplayObject, this);
      TextView.__super__.constructor.apply(this, arguments);
      this.text_anchor || (this.text_anchor = {
        x: 0.5,
        y: 0
      });
      this.text_position || (this.text_position = {
        x: 20,
        y: 50
      });
      this.text_format || (this.text_format = {
        font: 'regular 8px Arial'
      });
    }

    TextView.prototype.createDisplayObject = function() {
      this.display_object = new PIXI.Text(this.entity.toString(), this.text_format);
      this.display_object.anchor.x = this.text_anchor.x;
      this.display_object.anchor.y = this.text_anchor.y;
      this.display_object.position.x = this.text_position.x;
      this.display_object.position.y = this.text_position.y;
      return this.display_object;
    };

    return TextView;

  })(View);

}).call(this);
