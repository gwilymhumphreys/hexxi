// Generated by CoffeeScript 1.9.3
(function() {
  var EffectUtils, Highlightable, System,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  System = require('./system');

  EffectUtils = require('../lib/effect_utils');

  module.exports = Highlightable = (function(superClass) {
    extend(Highlightable, superClass);

    function Highlightable() {
      this.onEndHighlight = bind(this.onEndHighlight, this);
      this.onHighlight = bind(this.onHighlight, this);
      this.onEntityCreated = bind(this.onEntityCreated, this);
      return Highlightable.__super__.constructor.apply(this, arguments);
    }

    Highlightable.prototype._name = 'highlights';

    Highlightable.prototype.onEntityCreated = function(entity) {
      if (!entity.hasComponent('highlight')) {
        return;
      }
      Highlightable.__super__.onEntityCreated.apply(this, arguments);
      EffectUtils.initEffects(entity, entity.highlight);
      entity.on('highlight/on', this.onHighlight);
      return entity.on('highlight/off', this.onEndHighlight);
    };

    Highlightable.prototype.onHighlight = function(entity) {
      if (entity.highlight.highlighting) {
        return;
      }
      entity.highlight.highlighting = true;
      return EffectUtils.activate(entity, entity.highlight);
    };

    Highlightable.prototype.onEndHighlight = function(entity) {
      if (!entity.highlight.highlighting) {
        return;
      }
      entity.highlight.highlighting = false;
      return EffectUtils.deactivate(entity, entity.highlight);
    };

    return Highlightable;

  })(System);

}).call(this);
