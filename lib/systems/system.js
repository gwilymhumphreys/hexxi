// Generated by CoffeeScript 1.7.1
(function() {
  var Engine, System,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Engine = require('../engine/engine');

  module.exports = System = (function() {
    function System(options) {
      var key, value, _ref;
      this.options = options != null ? options : {};
      this.onEntityDestroyed = __bind(this.onEntityDestroyed, this);
      this.onEntityCreated = __bind(this.onEntityCreated, this);
      this.init = __bind(this.init, this);
      _ref = this.options;
      for (key in _ref) {
        value = _ref[key];
        this[key] = value;
      }
    }

    System.prototype.init = function() {
      var entity, _i, _len, _ref;
      this.entities = [];
      _ref = Engine.entities;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        entity = _ref[_i];
        this.onEntityCreated(entity);
      }
      Engine.on('entity/created', this.onEntityCreated);
      return Engine.on('entity/destroyed', this.onEntityDestroyed);
    };

    System.prototype.update = function() {};

    System.prototype.onEntityCreated = function(entity) {};

    System.prototype.onEntityDestroyed = function(entity) {};

    return System;

  })();

}).call(this);
