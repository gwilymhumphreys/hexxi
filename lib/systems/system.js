// Generated by CoffeeScript 1.9.3
(function() {
  var System, _,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  _ = require('lodash');

  module.exports = System = (function() {
    function System(options) {
      var key, ref, value;
      this.options = options != null ? options : {};
      this.entityById = bind(this.entityById, this);
      this.onEntityDestroyed = bind(this.onEntityDestroyed, this);
      this.onEntityCreated = bind(this.onEntityCreated, this);
      this.init = bind(this.init, this);
      ref = this.options;
      for (key in ref) {
        value = ref[key];
        this[key] = value;
      }
      this.engine || (this.engine = require('../engine'));
    }

    System.prototype.init = function() {
      var entity, i, len, ref;
      this.entities = [];
      ref = this.engine.entities;
      for (i = 0, len = ref.length; i < len; i++) {
        entity = ref[i];
        this.onEntityCreated(entity);
      }
      this.engine.on('entity/created', this.onEntityCreated);
      return this.engine.on('entity/destroyed', this.onEntityDestroyed);
    };

    System.prototype.update = function() {};

    System.prototype.onEntityCreated = function(entity) {};

    System.prototype.onEntityDestroyed = function(entity) {};

    System.prototype.entityById = function(id) {
      return _.find(this.entities, function(e) {
        return e.id === id;
      });
    };

    return System;

  })();

}).call(this);
