// Generated by CoffeeScript 1.9.3
(function() {
  var Relations, System, _,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  _ = require('lodash');

  System = require('./system');

  module.exports = Relations = (function(superClass) {
    extend(Relations, superClass);

    function Relations() {
      this.onEnterTile = bind(this.onEnterTile, this);
      this.init = bind(this.init, this);
      return Relations.__super__.constructor.apply(this, arguments);
    }

    Relations.prototype._name = 'relations';

    Relations.prototype.init = function() {
      Relations.__super__.init.apply(this, arguments);
      this.balls = [];
      return this.engine.on('enter_tile', this.onEnterTile);
    };

    Relations.prototype.onEnterTile = function(info) {
      var child, entity, i, len, position, ref, ref1, ref2, results;
      entity = info.entity, position = info.position;
      if ((ref = entity.relations) != null ? (ref1 = ref.children) != null ? ref1.length : void 0 : void 0) {
        ref2 = entity.relations.children;
        results = [];
        for (i = 0, len = ref2.length; i < len; i++) {
          child = ref2[i];
          results.push(child.hex_position.set(entity.hex_position));
        }
        return results;
      }
    };

    return Relations;

  })(System);

}).call(this);
