// Generated by CoffeeScript 1.7.1
(function() {
  var Context, Engine, SelectContext, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ = require('underscore');

  Engine = require('../engine/engine');

  Context = require('./context');

  module.exports = SelectContext = (function(_super) {
    __extends(SelectContext, _super);

    function SelectContext() {
      this.select = __bind(this.select, this);
      this.deactivate = __bind(this.deactivate, this);
      this.activate = __bind(this.activate, this);
      return SelectContext.__super__.constructor.apply(this, arguments);
    }

    SelectContext.prototype._name = 'select';

    SelectContext.prototype.activate = function() {
      var entity, _i, _len, _ref, _results;
      this.entities = Engine.entitiesByComponent('selectable');
      _ref = this.entities;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        entity = _ref[_i];
        _results.push(entity.on('click', this.select));
      }
      return _results;
    };

    SelectContext.prototype.deactivate = function() {
      var entity, _i, _len, _ref, _results;
      _ref = this.entities;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        entity = _ref[_i];
        _results.push(entity.off('click', this.select));
      }
      return _results;
    };

    SelectContext.prototype.select = function(e, entity) {
      console.log('entityseleting');
      if (!Engine.getSystem('teams').isAlly(entity)) {
        return;
      }
      Engine.getSystem('selectables').select(entity);
      return Engine.getSystem('input').setContext('selected', entity);
    };

    return SelectContext;

  })(Context);

}).call(this);
