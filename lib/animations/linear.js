// Generated by CoffeeScript 1.9.3
(function() {
  var Animation, AnimationUtils, LinearAnimation, _, tweene,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  _ = require('lodash');

  tweene = require('tween.js');

  Animation = require('./animation');

  AnimationUtils = require('../lib/animation_utils');

  module.exports = LinearAnimation = (function(superClass) {
    extend(LinearAnimation, superClass);

    function LinearAnimation() {
      this.update = bind(this.update, this);
      LinearAnimation.__super__.constructor.apply(this, arguments);
      if (!this.entity) {
        throw new Error('LinearAnimation missing entity');
      }
      if (!this.target) {
        throw new Error('LinearAnimation missing target');
      }
      this.target = AnimationUtils.toTarget(this.engine, this.target);
      this.speed = 0.2;
    }

    LinearAnimation.prototype.update = function() {
      if (this.complete = AnimationUtils.reachedTarget(this.entity, this.target)) {
        this.emit('complete', this);
        return;
      }
      return AnimationUtils.updatePosition(this.entity, this.target, this.speed);
    };

    return LinearAnimation;

  })(Animation);

}).call(this);
