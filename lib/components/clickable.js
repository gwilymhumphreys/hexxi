// Generated by CoffeeScript 1.9.3
(function() {
  var Clickable, Component,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Component = require('./component');

  module.exports = Clickable = (function(superClass) {
    extend(Clickable, superClass);

    Clickable.prototype._name = 'clickable';

    function Clickable() {
      this.onClick = bind(this.onClick, this);
      this.onDisplayObjectCreated = bind(this.onDisplayObjectCreated, this);
      Clickable.__super__.constructor.apply(this, arguments);
      this.requires('view');
      if (this.entity.view.display_object) {
        this.onDisplayObjectCreated();
      } else {
        this.entity.once('view/display_object_created', this.onDisplayObjectCreated);
      }
    }

    Clickable.prototype.onDisplayObjectCreated = function() {
      this.selected = false;
      this.entity.view.display_object.interactive = true;
      return this.entity.view.display_object.click = this.onClick;
    };

    Clickable.prototype.onClick = function(event) {
      return this.entity.emit('click', event);
    };

    return Clickable;

  })(Component);

}).call(this);
