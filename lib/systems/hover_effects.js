// Generated by CoffeeScript 1.9.3
(function() {
  var DEFAULTS, EffectUtils, HoverEffects, PIXI, System,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  PIXI = require('pixi.js');

  System = require('./system');

  EffectUtils = require('../lib/effect_utils');

  DEFAULTS = {
    COLOUR: '#ffffff'
  };

  module.exports = HoverEffects = (function(superClass) {
    extend(HoverEffects, superClass);

    function HoverEffects() {
      this.onMouseout = bind(this.onMouseout, this);
      this.onMouseover = bind(this.onMouseover, this);
      this.onEntityCreated = bind(this.onEntityCreated, this);
      return HoverEffects.__super__.constructor.apply(this, arguments);
    }

    HoverEffects.prototype.onEntityCreated = function(entity) {
      if (!entity.hasComponent('hover_effects')) {
        return;
      }
      EffectUtils.initEffects(entity, entity.hover_effects);
      entity.on('mouseover', this.onMouseover);
      return entity.on('mouseout', this.onMouseout);
    };

    HoverEffects.prototype.onMouseover = function(entity, event) {
      if (entity.hover_effects.hovering || this.engine.getSystem('teams').isEnemy(entity)) {
        return;
      }
      entity.hover_effects.hovering = true;
      return EffectUtils.activate(entity, entity.hover_effects);
    };

    HoverEffects.prototype.onMouseout = function(entity, event) {
      if (!entity.hover_effects.hovering) {
        return;
      }
      entity.hover_effects.hovering = false;
      return EffectUtils.deactivate(entity, entity.hover_effects);
    };

    return HoverEffects;

  })(System);

}).call(this);
