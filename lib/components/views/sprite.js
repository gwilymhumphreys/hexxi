// Generated by CoffeeScript 1.9.3
(function() {
  var PIXI, Sprite, View, _,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  _ = require('lodash');

  View = require('./view');

  PIXI = require('pixi.js');

  module.exports = Sprite = (function(superClass) {
    extend(Sprite, superClass);

    function Sprite() {
      this.createDisplayObject = bind(this.createDisplayObject, this);
      return Sprite.__super__.constructor.apply(this, arguments);
    }

    Sprite.prototype._name = 'sprite';

    Sprite.prototype.createDisplayObject = function() {
      if (!this.texture) {
        return new Error('Sprite missing texture');
      }
      this.pixi_texture = PIXI.Texture.fromImage(this.texture);
      this.display_object = new PIXI.Sprite(this.pixi_texture);
      if (this.anchor) {
        _.extend(this.display_object.anchor, this.anchor);
      }
      if (this.scale) {
        if (_.isNumber(this.scale)) {
          this.scale = {
            x: this.scale,
            y: this.scale
          };
        }
        _.extend(this.display_object.scale, this.scale);
      }
      if (this.z_index) {
        this.display_object.z_index = this.z_index;
      }
      this.entity.emit('view/display_object_created');
      return this.display_object;
    };

    return Sprite;

  })(View);

}).call(this);
