// Generated by CoffeeScript 1.9.3
(function() {
  var Component, User,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Component = require('./component');

  module.exports = User = (function(superClass) {
    extend(User, superClass);

    User.prototype._name = 'user';

    function User(entity, options) {
      this.entity = entity;
      this.team = bind(this.team, this);
      User.__super__.constructor.apply(this, arguments);
      this.teams || (this.teams = []);
      if (this.is_local == null) {
        this.is_local = true;
      }
    }

    User.prototype.team = function() {
      var ref;
      return (ref = this.teams) != null ? ref[0] : void 0;
    };

    return User;

  })(Component);

}).call(this);
