// Generated by CoffeeScript 1.9.3
(function() {
  var System, User, Users, _,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  _ = require('lodash');

  System = require('./system');

  User = require('../entities/user');

  module.exports = Users = (function(superClass) {
    extend(Users, superClass);

    function Users() {
      this.setLocalUserId = bind(this.setLocalUserId, this);
      this.localUser = bind(this.localUser, this);
      this.onEntityCreated = bind(this.onEntityCreated, this);
      this.init = bind(this.init, this);
      return Users.__super__.constructor.apply(this, arguments);
    }

    Users.prototype._name = 'users';

    Users.prototype.init = function() {
      return this.default_user || (this.default_user = new User({
        id: 1,
        is_local: true
      }));
    };

    Users.prototype.onEntityCreated = function(entity) {
      if (!entity.hasComponent('user')) {
        return;
      }
      return Users.__super__.onEntityCreated.apply(this, arguments);
    };

    Users.prototype.localUser = function() {
      return _.find(this.entities, (function(_this) {
        return function(u) {
          return u.user.is_local;
        };
      })(this));
    };

    Users.prototype.setLocalUserId = function(id) {
      return this.localUser.id = id;
    };

    return Users;

  })(System);

}).call(this);
