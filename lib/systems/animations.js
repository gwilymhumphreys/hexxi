// Generated by CoffeeScript 1.7.1
(function() {
  var AnimationSystem, Engine, System, tweene,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Engine = require('../engine/engine');

  System = require('./system');

  tweene = require('tween');

  module.exports = AnimationSystem = (function(_super) {
    __extends(AnimationSystem, _super);

    AnimationSystem.prototype._name = 'animations';

    function AnimationSystem() {
      this.update = __bind(this.update, this);
      this.onTweenComplete = __bind(this.onTweenComplete, this);
      this.onCancel = __bind(this.onCancel, this);
      this.onPause = __bind(this.onPause, this);
      this.onStart = __bind(this.onStart, this);
      this.onEntityDestroyed = __bind(this.onEntityDestroyed, this);
      this.onEntityCreated = __bind(this.onEntityCreated, this);
    }

    AnimationSystem.prototype.onEntityCreated = function(entity) {
      if (!entity.hasComponent('animations')) {
        return;
      }
      AnimationSystem.__super__.onEntityCreated.apply(this, arguments);
      entity.on('animation/start', this.onStart);
      entity.on('animation/pause', this.onPause);
      return entity.on('animation/cancel', this.onCancel);
    };

    AnimationSystem.prototype.onEntityDestroyed = function(entity) {
      AnimationSystem.__super__.onEntityDestroyed.apply(this, arguments);
      entity.off('animation/start', this.onStart);
      entity.off('animation/pause', this.onPause);
      return entity.off('animation/cancel', this.onCancel);
    };

    AnimationSystem.prototype.onStart = function(entity, tween) {
      tween.onComplete(this.onTweenComplete);
      entity.animations.tweens.push(tween);
      return tween.start();
    };

    AnimationSystem.prototype.onPause = function(entity, tween) {
      var _i, _len, _ref, _results;
      if (tween) {
        return tween.stop();
      } else {
        _ref = entity.animations.tweens;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          tween = _ref[_i];
          _results.push(tween.stop());
        }
        return _results;
      }
    };

    AnimationSystem.prototype.onCancel = function(entity, tween) {
      var _i, _len, _ref, _results;
      if (tween) {
        return tween.cancel();
      } else {
        _ref = entity.animations.tweens;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          tween = _ref[_i];
          _results.push(tween.cancel());
        }
        return _results;
      }
    };

    AnimationSystem.prototype.onTweenComplete = function() {};

    AnimationSystem.prototype.update = function() {
      return tweene.update();
    };

    return AnimationSystem;

  })(System);

}).call(this);
