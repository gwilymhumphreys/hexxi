// Generated by CoffeeScript 1.7.1
(function() {
  var Engine, System, Teams,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Engine = require('../engine/engine');

  System = require('./system');

  module.exports = Teams = (function(_super) {
    __extends(Teams, _super);

    function Teams() {
      this.isEnemy = __bind(this.isEnemy, this);
      this.isAlly = __bind(this.isAlly, this);
      this.onEntityCreated = __bind(this.onEntityCreated, this);
      return Teams.__super__.constructor.apply(this, arguments);
    }

    Teams.prototype._name = 'teams';

    Teams.prototype.onEntityCreated = function(entity) {
      if (!entity.hasComponent('team')) {
        return;
      }
      return Teams.__super__.onEntityCreated.apply(this, arguments);
    };

    Teams.prototype.isAlly = function(entity) {
      var _ref;
      return (((_ref = entity.player) != null ? _ref.team_id : void 0) != null) && Engine.active_team.id === entity.player.team_id;
    };

    Teams.prototype.isEnemy = function(entity) {
      var _ref;
      return (((_ref = entity.player) != null ? _ref.team_id : void 0) != null) && Engine.active_team.id !== entity.player.team_id;
    };

    return Teams;

  })(System);

}).call(this);
